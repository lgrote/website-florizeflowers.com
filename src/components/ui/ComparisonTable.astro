---
import { getAffiliateLink } from '../../utils/affiliateLinks';
import type { CollectionEntry } from 'astro:content';
import type { SupportedLanguage } from '../../i18n/config';
import { getLanguageFromUrl } from '../../i18n/utils';
import { t } from '../../i18n/translations';

interface Props {
  services: CollectionEntry<'services'>[];
  maxServices?: number;
  lang?: SupportedLanguage;
}

const { services, maxServices = 5, lang: propLang } = Astro.props;

// Get language
const lang: SupportedLanguage = propLang || (Astro.currentLocale as SupportedLanguage) || getLanguageFromUrl(Astro.url);

// Sort by rating and limit
const topServices = services
  .sort((a, b) => b.data.base.rating - a.data.base.rating)
  .slice(0, maxServices);

// Fetch affiliate links for all services (with locale awareness)
const servicesWithAffiliates = await Promise.all(
  topServices.map(async (service) => {
    const affiliateUrl = await getAffiliateLink(service.data.base.id, lang);
    return { service, affiliateUrl };
  })
);
---

<!-- Desktop Table Layout -->
<div class="comparison-table-wrapper comparison-table-desktop">
  <table class="comparison-table">
    <thead>
      <tr>
        <th>{t(lang, 'table.service')}</th>
        <th>{t(lang, 'table.priceRange')}</th>
        <th>{t(lang, 'table.deliveryOptions')}</th>
        <th>{t(lang, 'table.keyFeatures')}</th>
        <th>{t(lang, 'table.ourRating')}</th>
        <th>{t(lang, 'table.visitService')}</th>
      </tr>
    </thead>
    <tbody>
      {servicesWithAffiliates.map(({ service, affiliateUrl }, index) => (
        <tr class={index === 0 ? 'featured-service' : ''}>
          <td>
            <div class="service-info">
              <img
                src={service.data.base.logo_path}
                alt={`${service.data.base.name} flower arrangement`}
              />
              <div>
                <h4>{service.data.base.name}</h4>
                {service.data.base.winner_badge && (
                  <span class="winner-badge">{service.data.base.winner_badge}</span>
                )}
              </div>
            </div>
          </td>
          <td>{service.data.base.price_range}</td>
          <td>
            {service.data.base.delivery_options.slice(0, 2).map((option, i) => (
              <Fragment>
                {option}
                {i < Math.min(service.data.base.delivery_options.length - 1, 1) && <br />}
              </Fragment>
            ))}
          </td>
          <td>
            {service.data.base.key_features.slice(0, 2).map((feature, i) => (
              <Fragment>
                {feature}
                {i < Math.min(service.data.base.key_features.length - 1, 1) && <br />}
              </Fragment>
            ))}
          </td>
          <td>
            <span class="rating-stars">⭐⭐⭐⭐⭐</span>{service.data.base.rating}/5
          </td>
          <td>
            <div class="table-cta-group">
              <a
                href={`/${lang}/services/${service.data.base.id}`}
                class="cta-button secondary"
              >
                {t(lang, 'buttons.readReview')}
              </a>
              <div class="affiliate-cta primary-cta">
                <a
                  href={affiliateUrl}
                  class="cta-button"
                  target="_blank"
                  rel="nofollow sponsored"
                >
                  {t(lang, 'buttons.visitService')}
                </a>
              </div>
            </div>
          </td>
        </tr>
      ))}
    </tbody>
  </table>
</div>

<!-- Mobile Card Layout -->
<div class="comparison-cards-mobile">
  {servicesWithAffiliates.map(({ service, affiliateUrl }, index) => (
    <div class={`service-card ${index === 0 ? 'featured-card' : ''}`}>
      <div class="card-header">
        <img
          src={service.data.base.logo_path}
          alt={`${service.data.base.name} flower arrangement`}
          class="card-logo"
        />
        <div class="card-title-section">
          <h3>{service.data.base.name}</h3>
          {service.data.base.winner_badge && (
            <span class="winner-badge">{service.data.base.winner_badge}</span>
          )}
        </div>
      </div>

      <div class="card-rating">
        <span class="rating-stars">⭐⭐⭐⭐⭐</span>
        <span class="rating-value">{service.data.base.rating}/5</span>
      </div>

      <div class="card-info-section">
        <div class="info-row">
          <span class="info-label">{t(lang, 'service.priceRange')}:</span>
          <span class="info-value">{service.data.base.price_range}</span>
        </div>

        <div class="info-row">
          <span class="info-label">{t(lang, 'service.delivery')}:</span>
          <ul class="info-list">
            {service.data.base.delivery_options.slice(0, 3).map((option) => (
              <li>{option}</li>
            ))}
          </ul>
        </div>

        <div class="info-row">
          <span class="info-label">{t(lang, 'table.keyFeatures')}:</span>
          <ul class="info-list">
            {service.data.base.key_features.slice(0, 3).map((feature) => (
              <li>{feature}</li>
            ))}
          </ul>
        </div>
      </div>

      <div class="card-cta-group">
        <a
          href={affiliateUrl}
          class="cta-button primary"
          target="_blank"
          rel="nofollow sponsored"
        >
          {t(lang, 'buttons.visitService')}
        </a>
        <a
          href={`/${lang}/services/${service.data.base.id}`}
          class="cta-button secondary"
        >
          {t(lang, 'buttons.readReview')}
        </a>
      </div>
    </div>
  ))}
</div>

<style>
  /* Show desktop table on larger screens, hide mobile cards */
  .comparison-table-desktop {
    display: block;
  }

  .comparison-cards-mobile {
    display: none;
  }

  /* Desktop Table Styles */
  .comparison-table-wrapper {
    overflow-x: auto;
    margin: 2rem 0;
    border-radius: 0.75rem;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
    background: white;
    border: 1px solid #e5e5e5;
  }

  .comparison-table {
    width: 100%;
    border-collapse: collapse;
    background-color: white;
    min-width: 840px;
    font-size: 0.875rem;
    table-layout: fixed;
  }

  /* Optimized column widths for better space distribution */
  .comparison-table th:nth-child(1) { width: 180px; } /* Service */
  .comparison-table th:nth-child(2) { width: 90px; } /* Price Range */
  .comparison-table th:nth-child(3) { width: 130px; } /* Delivery Options */
  .comparison-table th:nth-child(4) { width: 160px; } /* Key Features */
  .comparison-table th:nth-child(5) { width: 110px; } /* Our Rating */
  .comparison-table th:nth-child(6) { width: 170px; } /* Visit Service */

  .comparison-table th {
    background-color: #4a7c59;
    color: white;
    padding: 0.75rem 0.5rem;
    text-align: left;
    font-family: 'Inter', sans-serif;
    font-weight: 600;
    font-size: 0.875rem;
  }

  .comparison-table td {
    padding: 0.75rem 0.5rem;
    border-bottom: 1px solid #e5e5e5;
    vertical-align: middle;
    font-size: 0.875rem;
  }

  .comparison-table td:nth-child(6) {
    padding: 0.75rem 0.5rem;
    overflow: visible;
  }

  .comparison-table tr:nth-child(even) {
    background-color: #faf8f3;
  }

  .comparison-table tr:hover {
    background-color: rgba(232, 180, 203, 0.1);
  }

  .featured-service {
    background-color: rgba(232, 180, 203, 0.15) !important;
    border-left: 4px solid #e8b4cb;
  }

  .featured-service:hover {
    background-color: rgba(232, 180, 203, 0.2) !important;
  }

  .service-info {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .service-info img {
    width: 70px;
    height: 70px;
    min-width: 70px;
    max-width: 70px;
    object-fit: contain;
    border-radius: 0.375rem;
    flex-shrink: 0;
  }

  .service-info div h4 {
    margin: 0;
    font-size: 0.95rem;
    font-family: 'Inter', sans-serif;
    color: #2c2c2c;
    line-height: 1.3;
  }

  .winner-badge {
    background-color: #d4af37;
    color: white;
    padding: 0.25rem 0.5rem;
    border-radius: 1rem;
    font-size: 0.75rem;
    font-weight: 600;
    display: inline-block;
    margin-top: 2px;
  }

  .rating-stars {
    color: #d4af37;
    font-size: 1.1rem;
    margin-right: 0.5rem;
  }

  .table-cta-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    align-items: stretch;
    width: 100%;
    max-width: 100%;
  }

  .cta-button {
    display: block;
    padding: 0.5rem 0.375rem;
    border-radius: 0.5rem;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.2s;
    text-align: center;
    width: 100%;
    font-size: 0.75rem;
    box-sizing: border-box;
    white-space: nowrap;
    line-height: 1.2;
  }

  .cta-button.secondary {
    background-color: transparent;
    color: #4a7c59;
    border: 2px solid #4a7c59;
  }

  .cta-button.secondary:hover {
    background-color: #4a7c59;
    color: white;
  }

  .cta-button.primary {
    background-color: #4a7c59;
    color: white;
    border: 2px solid #4a7c59;
  }

  .cta-button.primary:hover {
    background-color: #d4af37;
    border-color: #d4af37;
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
  }

  .affiliate-cta {
    width: 100%;
    max-width: 100%;
    box-sizing: border-box;
  }

  .affiliate-cta .cta-button {
    background-color: #4a7c59;
    color: white;
    border: 2px solid #4a7c59;
  }

  .affiliate-cta .cta-button:hover {
    background-color: #d4af37;
    border-color: #d4af37;
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
  }

  /* Mobile Card Styles */
  .service-card {
    background: white;
    border-radius: 0.75rem;
    padding: 1.5rem;
    margin-bottom: 1rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    border: 2px solid #e5e5e5;
    transition: all 0.3s ease;
  }

  .service-card:hover {
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  }

  .featured-card {
    border-color: #e8b4cb;
    background-color: rgba(232, 180, 203, 0.05);
  }

  .card-header {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    margin-bottom: 1rem;
    padding-bottom: 1rem;
    border-bottom: 2px solid #f3f4f6;
  }

  .card-logo {
    width: 120px;
    height: 120px;
    object-fit: contain;
    border-radius: 0.5rem;
    margin-bottom: 0.75rem;
  }

  .card-title-section h3 {
    margin: 0 0 0.5rem 0;
    font-size: 1.25rem;
    font-family: 'Inter', sans-serif;
    color: #2c2c2c;
    font-weight: 700;
  }

  .card-rating {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 1.25rem;
    font-size: 1.1rem;
    font-weight: 600;
  }

  .rating-value {
    color: #2c2c2c;
    margin-left: 0.5rem;
  }

  .card-info-section {
    margin-bottom: 1.5rem;
  }

  .info-row {
    margin-bottom: 1rem;
  }

  .info-row:last-child {
    margin-bottom: 0;
  }

  .info-label {
    display: block;
    font-weight: 600;
    color: #4a7c59;
    margin-bottom: 0.375rem;
    font-size: 0.95rem;
  }

  .info-value {
    display: block;
    color: #2c2c2c;
    font-size: 1rem;
  }

  .info-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .info-list li {
    padding-left: 1.25rem;
    position: relative;
    margin-bottom: 0.375rem;
    color: #2c2c2c;
    font-size: 0.95rem;
    line-height: 1.5;
  }

  .info-list li:before {
    content: "✓";
    position: absolute;
    left: 0;
    color: #4a7c59;
    font-weight: 700;
  }

  .card-cta-group {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .card-cta-group .cta-button {
    width: 100%;
    padding: 0.875rem 1.5rem;
    font-size: 1rem;
  }

  /* Mobile breakpoint - switch to cards at 1200px instead of 1023px */
  @media (max-width: 1199px) {
    .comparison-table-desktop {
      display: none;
    }

    .comparison-cards-mobile {
      display: block;
      margin: 2rem 0;
    }
  }
</style>
