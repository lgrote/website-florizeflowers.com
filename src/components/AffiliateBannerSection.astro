---
/**
 * AffiliateBannerSection Component
 *
 * Displays affiliate banners in two modes:
 * - "all": Shows all enabled banners in a responsive grid (homepage)
 * - "single": Shows only the banner for a specific service (service pages)
 *
 * If no banners are available, the section is not rendered.
 */

import AffiliateBanner from './ui/AffiliateBanner.astro';
import { getAffiliateBanners } from '../lib/sanity';
import type { SupportedLanguage } from '../i18n/config';
import { t } from '../i18n/translations';

export interface Props {
  variant: 'all' | 'single';
  serviceId?: string;
  title?: string;
  lang?: SupportedLanguage;
}

const {
  variant = 'all',
  serviceId,
  title,
  lang = 'en' as SupportedLanguage
} = Astro.props;

const sectionTitle = title || t(lang, 'affiliate.partnersTitle');
const subtitle = t(lang, 'affiliate.partnersSubtitle');
const disclosure = t(lang, 'affiliate.disclosure');
const learnMoreText = t(lang, 'affiliate.learnMore');

// Fetch banners based on variant
const banners = await getAffiliateBanners(variant === 'single' ? serviceId : undefined);

// Don't render if no banners available
if (banners.length === 0) {
  return null;
}
---

{banners.length > 0 && (
  <section
    class="affiliate-banner-section py-12 bg-gray-50"
    aria-label="Affiliate Partners"
  >
    <div class="container mx-auto px-4">
      <div class="max-w-7xl mx-auto">
        {variant === 'all' && (
          <>
            <div class="text-center mb-8">
              <h2 class="text-2xl lg:text-3xl font-bold text-gray-900 mb-2">
                {sectionTitle}
              </h2>
              <p class="text-gray-600">
                {subtitle}
              </p>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {banners.map((banner) => (
                <AffiliateBanner
                  serviceId={banner.serviceId}
                  htmlCode={banner.htmlCode}
                  description={banner.description}
                />
              ))}
            </div>
          </>
        )}

        {variant === 'single' && (
          <div class="max-w-3xl mx-auto">
            {banners.map((banner) => (
              <AffiliateBanner
                serviceId={banner.serviceId}
                htmlCode={banner.htmlCode}
                description={banner.description}
              />
            ))}
          </div>
        )}

        {variant === 'all' && (
          <div class="text-center mt-6">
            <p class="text-sm text-gray-500">
              {disclosure}{' '}
              <a href={`/${lang}/about`} class="text-green-600 hover:text-green-700 underline">
                {learnMoreText}
              </a>
            </p>
          </div>
        )}
      </div>
    </div>
  </section>
)}

<style>
  .affiliate-banner-section {
    /* Additional styling if needed */
  }
</style>
